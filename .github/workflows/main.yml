name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    runs-on: self-hosted
    env:
      DOTNET_INSTALL_DIR: ..dotnet

    strategy:
      matrix:
        language: [csharp, python]
        version: [V1, V2]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup .NET
    - name: Setup .NET
      if: matrix.language == 'csharp'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        install-dir: ${{ runner.temp }}/dotnet

    # Restore dependencies
    - name: Restore dependencies
      if: matrix.language == 'csharp'
      run: dotnet restore ./${{ matrix.version }}/Cargohub/Werehouses.sln

    # Build the solution
    - name: Build solution
      if: matrix.language == 'csharp'
      run: |
        dotnet build ./${{ matrix.version }}/Cargohub/Werehouses.sln --configuration Release --no-restore /p:NoWarn=true > build-warnings.txt 2>&1
      continue-on-error: true

    # Upload Build Warnings
    - name: Upload Build Warnings
      if: matrix.language == 'csharp'
      uses: actions/upload-artifact@v4
      with:
        name: build-warnings-${{ matrix.version }}
        path: build-warnings.txt

    # Run NUnit tests with coverage
    - name: Run MSTest with coverage
      if: matrix.language == 'csharp'
      run: |
        dotnet test ./${{ matrix.version }}/tests/tests.csproj --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
 
    # Install ReportGenerator globally
    - name: Install ReportGenerator
      if: matrix.language == 'csharp'
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    
     # Generate Coverage Report
    - name: Generate Coverage Report
      if: matrix.language == 'csharp'
      run: |
        reportgenerator -reports:"./${{ matrix.version }}/tests/TestResults/**/coverage.cobertura.xml" \
                        -targetdir:"coverage-report-${{ matrix.version }}" \
                        -reporttypes:Html
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    # Upload Coverage Report as an artifact
    - name: Upload Coverage Report
      if: matrix.language == 'csharp'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.version }}
        path: coverage-report-${{ matrix.version }}

    # Setup for Python projects
    - name: Set up Python
      if: matrix.language == 'python'
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
